@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Newtonsoft.Json.Linq
@using PluginBuilder.APIModels
@using PluginBuilder.Components.Icon
@using PluginBuilder.Controllers
@using PluginBuilder.DataModels
@model PluginDetailsViewModel
@{
	Layout = "_LayoutPublicModal";
	var desc = string.IsNullOrWhiteSpace(Model.Plugin.Description) ? "Plugin for BTCPay Server" : Model.Plugin.Description;
	var owner = Model.Plugin.GetGithubRepository()?.Owner;
	var dependencies = Model.Plugin.ManifestInfo["Dependencies"] as JArray;

	var sourceUrl = Model.Plugin.GetGithubRepository()?.GetSourceUrl(Model.Plugin.BuildInfo?["gitCommit"]?.ToString(), Model.Plugin.BuildInfo?["pluginDir"]?.ToString());
	var pluginUrl = Url.Action(nameof(HomeController.GetPluginDetails), "Home", new { pluginSlug = Model.Plugin.ProjectSlug },
		protocol: Context.Request.Scheme, host: Context.Request.Host.ToString());

    var currentRating = Model.RatingFilter;
}

@section Meta {
    <!-- Open Graph and Twitter metadata -->
    <meta property="og:type"        content="website" />
    <meta property="og:title"       content="@Model.Plugin.PluginTitle" />
    <meta property="og:description" content="@desc" />
    <meta property="og:url"         content="@pluginUrl" />
    <meta property="og:image"       content="@Model.Plugin.PluginLogo" />
    <meta property="og:site_name"   content="BTCPay Server Plugin Builder" />
    <meta property="og:locale" content="en_US" />

    <meta name="twitter:card"        content="summary_large_image" />
    <meta name="twitter:title"       content="@Model.Plugin.PluginTitle" />
    <meta name="twitter:description" content="@desc" />
    <meta name="twitter:image"       content="@Model.Plugin.PluginLogo" />

    <link rel="canonical" href="@pluginUrl" />
}

<partial name="_PublicHeader" />

@if (Model.ShowHiddenNotice)
{
    <div id="hidden-plugin-alert" class="alert alert-warning text-center mb-4" role="alert">
        <strong>Note:</strong> This plugin is currently <strong>hidden</strong> and only visible to you.
    </div>
}

<div class="container">
    <div class="row mb-4">
        <div class="col-12">
            <div class="bg-light rounded p-4 position-relative" style="background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);">
                <div class="d-flex align-items-center">
                    <div class="me-2">
                        <partial name="_PluginLogo" model="Model.Plugin" />
                    </div>
                    <div>
                        <h1 class="display-6 mb-1">@Model.Plugin.PluginTitle</h1>
                        @if (!string.IsNullOrWhiteSpace(owner))
                        {
                            <span>by <a href="https://github.com/@owner" rel="noreferrer noopener" target="_blank">@owner</a></span>
                        }
                    </div>
                    <a asp-action="Download" asp-controller="Api"
                       asp-route-pluginSlug="@Model.Plugin.ProjectSlug"
                       asp-route-version="@Model.Plugin.Version"
                       class="btn btn-primary ms-auto"
                       target="_blank"
                       rel="noopener noreferrer">Download</a>
                </div>
            </div>
        </div>
    </div>

    <div class="tab-content" id="pluginTabsContent">
        <div class="tab-pane fade show active" id="details" role="tabpanel">
            <div class="row">
                <div class="col-md-8">
                    <div class="card">
                        <div class="card-body">
                            <h4>Description</h4>
                            <p>@Model.Plugin.Description</p>
                        </div>
                    </div>
                    @if (Model.Contributors is List<GitHubContributor> contributors && contributors.Any())
                    {
                        <div class="card mt-4">
                            <div class="card-body">
                                <h4>Contributors & Developers</h4>
                                <div class="row">
                                    @foreach (var user in contributors)
                                    {
                                        <div class="col-md-6 d-flex align-items-center mb-3">
                                            <div class="me-3">
                                                <img src="@user.AvatarUrl"
                                                     class="rounded-circle"
                                                     style="width: 48px; height: 48px;"
                                                     alt="@user.Login avatar"
                                                     loading="lazy" />
                                            </div>
                                            <div>
                                                <a href="@user.HtmlUrl"
                                                   class="text-decoration-none"
                                                   target="_blank"
                                                   rel="noopener noreferrer">@user.Login</a>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    }

                    <div class="card mt-4" id="reviews">
                        <div class="card-body">
                            <div class="d-flex align-items-center mb-3">
                                <h4 class="mb-0">Reviews</h4>
                                <a class="btn btn-primary btn-sm ms-auto" href="#write-review">
                                    Write a review
                                </a>
                            </div>

                            <div class="mb-3">
                                @for (var star = 5; star >= 1; star--)
                                {
                                    var count = Model.Plugin.RatingSummary.StarCounts.ContainsKey(star) ? Model.Plugin.RatingSummary.StarCounts[star] : 0;
                                    var pct   = Model.Plugin.RatingSummary.StarPct.ContainsKey(star)   ? Model.Plugin.RatingSummary.StarPct[star]   : 0;
                                    var isActive = currentRating == star;
                                    var active = isActive ? "bg-light border rounded px-2" : "";

                                    <a class="text-decoration-none text-reset d-block"
                                       asp-action="GetPluginDetails"
                                       asp-controller="Home"
                                       asp-route-pluginSlug="@Model.Plugin.ProjectSlug"
                                       asp-route-sort="@Model.Sort"
                                       asp-route-skip="0"
                                       asp-route-count="@Model.Count"
                                       asp-route-rating="@(isActive ? null : star)"
                                       asp-fragment="reviews">
                                        <div class="d-flex align-items-center gap-2 mb-1 py-1 hover-bg @active">
                                            <span class="me-2">@star★</span>
                                            <div class="progress flex-grow-1" style="height:8px;">
                                                <div class="progress-bar" role="progressbar" style="width:@pct%"></div>
                                            </div>
                                            <span class="ms-2 small text-muted">@count</span>
                                        </div>
                                    </a>
                                }
                            </div>

                            @if (currentRating is not null)
                            {
                                <div class="mb-2">
                                    <span class="badge bg-secondary">
                                        Filtering by @currentRating★
                                    </span>
                                </div>
                            }

                            <div class="d-flex justify-content-end gap-2 mb-3">
                                <div class="dropdown">
                                    <button id="ReviewsSortToggle"
                                            class="btn btn-secondary btn-sm dropdown-toggle"
                                            type="button"
                                            data-bs-toggle="dropdown"
                                            aria-expanded="false">
                                        @(Model.Sort == "helpful" ? "Most helpful" : "Newest")
                                    </button>
                                    <div class="dropdown-menu dropdown-menu-end" aria-labelledby="ReviewsSortToggle">
                                        <a class="dropdown-item @(Model.Sort=="newest" ? "active" : null)"
                                           asp-action="GetPluginDetails"
                                           asp-controller="Home"
                                           asp-route-pluginSlug="@Model.Plugin.ProjectSlug"
                                           asp-route-sort="newest"
                                           asp-route-skip="0"
                                           asp-route-count="@Model.Count"
                                           asp-fragment="reviews">
                                            Newest
                                        </a>
                                        <a class="dropdown-item @(Model.Sort=="helpful" ? "active" : null)"
                                           asp-action="GetPluginDetails"
                                           asp-controller="Home"
                                           asp-route-pluginSlug="@Model.Plugin.ProjectSlug"
                                           asp-route-sort="helpful"
                                           asp-route-skip="0"
                                           asp-route-count="@Model.Count"
                                           asp-fragment="reviews">
                                            Most helpful
                                        </a>
                                    </div>
                                </div>
                            </div>

                            @if (!Model.Items.Any())
                            {
                                <div class="text-muted">
                                    No reviews yet.
                                    <a class="link-primary" href="#write-review">Be the first to write one</a>.
                                </div>
                            }
                            else
                            {
                                @foreach (var review in Model.Items)
                                {
                                    const string helpfulBaseBtn = "btn btn-link btn-sm p-0 align-middle d-inline-flex align-items-center";

                                    var voted = review.UserVoteHelpful;
                                    var upClass   = helpfulBaseBtn   + " " + (voted == true  ? "text-success" : "text-secondary");
                                    var downClass = helpfulBaseBtn + " " + (voted == false ? "text-danger"  : "text-secondary");

                                    <div class="border rounded p-3 mb-3">
                                      <div class="d-flex align-items-start">
                                        <div class="flex-grow-1">

                                          <div class="d-flex align-items-center flex-wrap gap-2">
                                            @if (!string.IsNullOrEmpty(review.AuthorAvatarUrl))
                                            {
                                                <img src="@review.AuthorAvatarUrl"
                                                     srcset="@review.AuthorAvatarUrl 1x, @($"{review.AuthorAvatarUrl}&s=96") 2x"
                                                     alt="@review.AuthorDisplay avatar"
                                                     class="rounded-circle me-1"
                                                     style="width:24px;height:24px;" loading="lazy" />
                                            }
                                            @if (!string.IsNullOrEmpty(review.AuthorUrl))
                                            {
                                                <a href="@review.AuthorUrl" target="_blank" rel="noopener noreferrer">@review.AuthorDisplay</a>
                                            }
                                            else
                                            {
                                                <strong>@review.AuthorDisplay</strong>
                                            }

                                            <span class="small text-muted">@review.CreatedAt.ToString("MMM dd, yyyy")</span>

                                            @if (!string.IsNullOrEmpty(review.PluginVersion))
                                            {
                                                <span class="badge bg-light text-dark border">@review.PluginVersion</span>
                                            }
                                          </div>

                                          <div class="mt-1 d-inline-flex align-items-center gap-1" title="@($"{review.Rating} out of 5")">
                                            @for (var i = 1; i <= 5; i++)
                                            {
                                                <span class="@(i <= review.Rating ? "text-warning" : "text-secondary") lh-1">
                                                    <vc:icon symbol="star-fill" />
                                                </span>
                                            }
                                          </div>
                                        </div>

                                        <div class="ms-auto d-inline-flex align-items-center gap-3">
                                          @if (!review.IsReviewOwner)
                                          {
                                            <!-- Upvote -->
                                            <form method="post"
                                                  asp-action="VoteReview"
                                                  asp-route-pluginSlug="@Model.Plugin.ProjectSlug"
                                                  asp-route-id="@review.Id"
                                                  asp-route-isHelpful="true"
                                                  class="d-inline">
                                              @Html.AntiForgeryToken()
                                              <button
                                                  type="submit"
                                                  class="@upClass"
                                                  onmouseover="this.classList.add('text-success');this.classList.remove('text-secondary')"
                                                  onmouseout="this.classList.remove('text-success');this.classList.add('text-secondary')"
                                                  aria-label="Mark this review as helpful">
                                                <vc:icon symbol="thumb-up" />
                                                <span class="small ms-1">@review.UpCount</span>
                                              </button>
                                            </form>

                                            <!-- Downvote -->
                                            <form method="post"
                                                  asp-action="VoteReview"
                                                  asp-route-pluginSlug="@Model.Plugin.ProjectSlug"
                                                  asp-route-id="@review.Id"
                                                  asp-route-isHelpful="false"
                                                  class="d-inline">
                                              @Html.AntiForgeryToken()
                                              <button
                                                  type="submit"
                                                  class="@downClass"
                                                  onmouseover="this.classList.add('text-danger');this.classList.remove('text-secondary')"
                                                  onmouseout="this.classList.remove('text-danger');this.classList.add('text-secondary')"
                                                  aria-label="Mark this review as not helpful">
                                                <vc:icon symbol="thumb-down" />
                                                <span class="small ms-1">@review.DownCount</span>
                                              </button>
                                            </form>
                                          }
                                        </div>
                                      </div>

                                        <div class="mt-1 d-flex">
                                            <div class="flex-grow-1 pe-2">
                                                @if (!string.IsNullOrWhiteSpace(review.Body))
                                                {
                                                    @review.Body
                                                }
                                            </div>

                                            @if (review.IsReviewOwner || Model.IsAdmin)
                                            {
                                                <button type="button"
                                                        class="btn btn-link btn-sm p-0 text-danger align-self-start ms-2"
                                                        title="Delete"
                                                        aria-label="Delete review"
                                                        data-bs-toggle="modal"
                                                        data-bs-target="#ConfirmModal"
                                                        data-action='@Url.EnsureLocal(
                                                                         Url.Action("DeleteReview","Home", new { pluginSlug = Model.Plugin.ProjectSlug, id = review.Id }),
                                                                         Context.Request
                                                                     )'
                                                        data-title="Delete review"
                                                        data-description="Delete this review? This action cannot be undone."
                                                        data-confirm="Delete">
                                                    <vc:icon symbol="actions-trash" />
                                                </button>
                                            }
                                        </div>
                                    </div>
                                }
                            }

                            <vc:pager view-model="Model" />

                            <hr class="my-4"/>

                            <a id="write-review"></a>
                            @if (User.Identity?.IsAuthenticated == true)
                            {
                                <form method="post" asp-action="UpsertReview" asp-controller="Home" asp-route-pluginSlug="@Model.Plugin.ProjectSlug">
                                    @Html.AntiForgeryToken()

                                    <input type="number"
                                           name="Rating"
                                           id="ratingInput"
                                           value="0"
                                           min="1" max="5"
                                           required
                                           class="visually-hidden" />

                                    <div class="row align-items-center g-2 mb-3">

                                        <div class="col">
                                            <div id="ratingStars"
                                                 class="d-inline-flex align-items-center gap-1 fs-4"
                                                 role="radiogroup" aria-label="Rating (1 to 5)" tabindex="0">
                                                @for (var i = 1; i <= 5; i++)
                                                {
                                                    <button type="button"
                                                            class="btn btn-link p-2 border-0 bg-transparent shadow-none star-btn"
                                                            data-value="@i"
                                                            aria-label="@i star@(i > 1 ? "s" : "")"
                                                            aria-pressed="false">
                                                        <span class="star-on d-none text-warning fs-4">
                                                            <vc:icon symbol="star-fill" />
                                                        </span>
                                                        <span class="star-off text-secondary fs-4">
                                                            <vc:icon symbol="star-fill" />
                                                        </span>
                                                    </button>
                                                }
                                            </div>
                                        </div>

                                        <div class="col-auto">
                                            <div class="d-flex align-items-center">
                                                <label class="form-label me-2 mb-0">Version</label>
                                                <select name="PluginVersion" class="form-select form-select-sm w-auto">
                                                    <option value="">N/A</option>
                                                    @if (Model.PluginVersions != null)
                                                    {
                                                        foreach (var version in Model.PluginVersions)
                                                        {
                                                            <option value="@version">@version</option>
                                                        }
                                                    }
                                                </select>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="mb-3">
                                        <label class="form-label">Review</label>
                                        <textarea name="Body" rows="4" maxlength="2000" class="form-control"></textarea>
                                    </div>

                                    <button class="btn btn-primary">Submit</button>
                                </form>
                            }
                            else
                            {
                                <div class="alert alert-info">
                                    Please <a asp-action="Login" asp-controller="Home">sign in</a> to write a review.
                                </div>
                            }
                        </div>
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="card">
                        <div class="card-body">
                            <div class="row mb-3">
                                <div class="col-6">
                                    <strong>Version</strong>
                                </div>
                                <div class="col-6 text-end">
                                    @Model.Plugin.Version
                                </div>
                            </div>

                            <div class="row mb-3">
                                <div class="col-6">
                                    <strong>Published</strong>
                                </div>
                                <div class="col-6 text-end">
                                    @(DateTimeOffset.TryParse(Model.Plugin.BuildInfo?["buildDate"]?.ToString(), out var parsedDate) ? parsedDate.ToString("MMM dd, yyyy") : "")
                                </div>
                            </div>
                            @if (!string.IsNullOrEmpty(sourceUrl))
                            {
                                <div class="row mb-3">
                                    <div class="col-6">
                                        <strong>Repository</strong>
                                    </div>
                                    <div class="col-6 text-end">
                                        <a href="@sourceUrl" target="_blank" rel="noopener noreferrer">
                                            View Source
                                        </a>
                                    </div>
                                </div>
                            }
                            @if (!string.IsNullOrEmpty(Model.Plugin.Documentation))
                            {
                                <div class="row mb-3">
                                    <div class="col-6">
                                        <strong>Documentation</strong>
                                    </div>
                                    <div class="col-6 text-end">
                                        <a href="@Model.Plugin.Documentation" target="_blank" rel="noopener noreferrer">
                                            View Documentation
                                        </a>
                                    </div>
                                </div>
                            }
                            @if (dependencies != null && dependencies.Count > 0)
                            {
                                foreach (var dependency in dependencies)
                                {
                                    <div class="row mb-3">
                                        <div class="col-6">
                                            <strong>@dependency["Identifier"]</strong>
                                        </div>
                                        <div class="col-6 text-end">
                                            @dependency["Condition"]
                                        </div>
                                    </div>
                                }
                            }
                            <div class="row mb-3">
                                <div class="col-6">
                                    <strong>Created</strong>
                                </div>
                                <div class="col-6 text-end">
                                    @Model.Plugin.CreatedDate.ToString("MMM dd, yyyy")
                                </div>
                            </div>

                            <div class="row mb-3">
                                <div class="col-6"><strong>Rating</strong></div>
                                <div class="col-6">
                                    <div class="d-flex justify-content-end">
                                        <partial name="_RatingInline" model="@(new RatingInlineViewModel {
                                                                                 Average        = Model.Plugin.RatingSummary.Average,
                                                                                 TotalReviews   = Model.Plugin.RatingSummary.TotalReviews,
                                                                                 ShowNumber     = true,
                                                                                 SingleStar     = true,
                                                                                 ShowTotalReviews = true,
                                                                                 IconSize       = "fs-5",
                                                                                 AriaLabelPrefix= Model.Plugin.ManifestInfo["Name"]?.ToString()
                                                                             })" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div><partial name="_Confirm" model="@(new ConfirmModel(title: "Delete review", desc: "Are you sure?", action: "Delete"))" />

<script>
    (() => {
        const input = document.getElementById('ratingInput');
        const group = document.getElementById('ratingStars');
        if (!input || !group) return;

        function render(val) {
            const v = Math.max(0, Math.min(5, parseInt(val || '0', 10)));
            group.querySelectorAll('.star-btn').forEach(btn => {
                const cur = parseInt(btn.dataset.value, 10);
                const on = v > 0 && cur <= v;
                btn.setAttribute('aria-pressed', on ? 'true' : 'false');
                btn.querySelector('.star-on').classList.toggle('d-none', !on);
                btn.querySelector('.star-off').classList.toggle('d-none', on);
            });
        }

        group.addEventListener('click', (e) => {
            const btn = e.target.closest('.star-btn');
            if (!btn || !group.contains(btn)) return;
            input.value = btn.dataset.value;
            render(input.value);
        });

        group.addEventListener('mouseover', (e) => {
            const btn = e.target.closest('.star-btn');
            if (!btn || !group.contains(btn)) return;
            render(btn.dataset.value);
        });

        group.addEventListener('mouseleave', () => {
            render(input.value);
        });

        render(input.value);
    })();
</script>
